// Code generated by protoc-gen-go. DO NOT EDIT.
// source: credit.proto

package credit

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type User struct {
	Surname              string   `protobuf:"bytes,1,opt,name=surname,proto3" json:"surname,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Patronymic           string   `protobuf:"bytes,3,opt,name=patronymic,proto3" json:"patronymic,omitempty"`
	Age                  int32    `protobuf:"varint,4,opt,name=age,proto3" json:"age,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_c62ac036f6f099d2, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetSurname() string {
	if m != nil {
		return m.Surname
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetPatronymic() string {
	if m != nil {
		return m.Patronymic
	}
	return ""
}

func (m *User) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

type UserRequest struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRequest) Reset()         { *m = UserRequest{} }
func (m *UserRequest) String() string { return proto.CompactTextString(m) }
func (*UserRequest) ProtoMessage()    {}
func (*UserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c62ac036f6f099d2, []int{1}
}

func (m *UserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRequest.Unmarshal(m, b)
}
func (m *UserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRequest.Marshal(b, m, deterministic)
}
func (m *UserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRequest.Merge(m, src)
}
func (m *UserRequest) XXX_Size() int {
	return xxx_messageInfo_UserRequest.Size(m)
}
func (m *UserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserRequest proto.InternalMessageInfo

func (m *UserRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type BankReply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Approved             bool     `protobuf:"varint,2,opt,name=approved,proto3" json:"approved,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankReply) Reset()         { *m = BankReply{} }
func (m *BankReply) String() string { return proto.CompactTextString(m) }
func (*BankReply) ProtoMessage()    {}
func (*BankReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_c62ac036f6f099d2, []int{2}
}

func (m *BankReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankReply.Unmarshal(m, b)
}
func (m *BankReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankReply.Marshal(b, m, deterministic)
}
func (m *BankReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankReply.Merge(m, src)
}
func (m *BankReply) XXX_Size() int {
	return xxx_messageInfo_BankReply.Size(m)
}
func (m *BankReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BankReply.DiscardUnknown(m)
}

var xxx_messageInfo_BankReply proto.InternalMessageInfo

func (m *BankReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *BankReply) GetApproved() bool {
	if m != nil {
		return m.Approved
	}
	return false
}

func init() {
	proto.RegisterType((*User)(nil), "credit.User")
	proto.RegisterType((*UserRequest)(nil), "credit.UserRequest")
	proto.RegisterType((*BankReply)(nil), "credit.BankReply")
}

func init() { proto.RegisterFile("credit.proto", fileDescriptor_c62ac036f6f099d2) }

var fileDescriptor_c62ac036f6f099d2 = []byte{
	// 232 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x41, 0x4f, 0x02, 0x31,
	0x10, 0x85, 0x5d, 0x58, 0x57, 0x18, 0x30, 0xd1, 0xf1, 0xd2, 0x70, 0x30, 0x9b, 0x9e, 0x38, 0x61,
	0x82, 0x27, 0x8f, 0xc0, 0xc1, 0xab, 0x69, 0xe2, 0x0f, 0xa8, 0x30, 0x1a, 0xa2, 0xdb, 0xd6, 0x69,
	0x57, 0xc3, 0xbf, 0x37, 0x1d, 0x96, 0x8d, 0xdc, 0xe6, 0xbd, 0xd7, 0xbc, 0xf7, 0xa5, 0x30, 0xdd,
	0x32, 0xed, 0xf6, 0x69, 0x11, 0xd8, 0x27, 0x8f, 0xd5, 0x51, 0xe9, 0x77, 0x28, 0x5f, 0x23, 0x31,
	0x2a, 0xb8, 0x8a, 0x2d, 0x3b, 0xdb, 0x90, 0x2a, 0xea, 0x62, 0x3e, 0x36, 0x27, 0x89, 0x08, 0xa5,
	0xd8, 0x03, 0xb1, 0xe5, 0xc6, 0x7b, 0x80, 0x60, 0x13, 0x7b, 0x77, 0x68, 0xf6, 0x5b, 0x35, 0x94,
	0xe4, 0x9f, 0x83, 0x37, 0x30, 0xb4, 0x1f, 0xa4, 0xca, 0xba, 0x98, 0x5f, 0x9a, 0x7c, 0xea, 0x07,
	0x98, 0xe4, 0x1d, 0x43, 0xdf, 0x2d, 0xc5, 0x84, 0x35, 0x94, 0x6d, 0x24, 0x96, 0xad, 0xc9, 0x72,
	0xba, 0xe8, 0xd8, 0xe4, 0x89, 0x24, 0x7a, 0x05, 0xe3, 0xb5, 0x75, 0x9f, 0x86, 0xc2, 0xd7, 0x21,
	0xd3, 0x35, 0x14, 0x63, 0xee, 0xec, 0xe8, 0x3a, 0x89, 0x33, 0x18, 0xd9, 0x10, 0xd8, 0xff, 0xd0,
	0x4e, 0x08, 0x47, 0xa6, 0xd7, 0xcb, 0x0d, 0x54, 0x1b, 0xe9, 0xc5, 0x27, 0xb8, 0x7e, 0xa6, 0x94,
	0xfb, 0x56, 0x2e, 0xfe, 0x12, 0xe3, 0xdd, 0xd9, 0xe2, 0x11, 0x6a, 0x76, 0x7b, 0x32, 0xfb, 0x61,
	0x7d, 0xb1, 0x1e, 0xbc, 0x14, 0x6f, 0x95, 0xfc, 0xd9, 0xe3, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x13, 0xfc, 0xe5, 0xc7, 0x43, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CreditClient is the client API for Credit service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CreditClient interface {
	GetBankAnswer(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*BankReply, error)
}

type creditClient struct {
	cc *grpc.ClientConn
}

func NewCreditClient(cc *grpc.ClientConn) CreditClient {
	return &creditClient{cc}
}

func (c *creditClient) GetBankAnswer(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*BankReply, error) {
	out := new(BankReply)
	err := c.cc.Invoke(ctx, "/credit.Credit/GetBankAnswer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CreditServer is the server API for Credit service.
type CreditServer interface {
	GetBankAnswer(context.Context, *UserRequest) (*BankReply, error)
}

func RegisterCreditServer(s *grpc.Server, srv CreditServer) {
	s.RegisterService(&_Credit_serviceDesc, srv)
}

func _Credit_GetBankAnswer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CreditServer).GetBankAnswer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/credit.Credit/GetBankAnswer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CreditServer).GetBankAnswer(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Credit_serviceDesc = grpc.ServiceDesc{
	ServiceName: "credit.Credit",
	HandlerType: (*CreditServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBankAnswer",
			Handler:    _Credit_GetBankAnswer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "credit.proto",
}
